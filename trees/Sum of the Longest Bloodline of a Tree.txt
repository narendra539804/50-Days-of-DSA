Given a binary tree of size N. Your task is to complete the function sumOfLongRootToLeafPath(), that find the sum of all nodes on the longest path from root to leaf node.
If two or more paths compete for the longest path, then the path having maximum sum of nodes is being considered.
_________________________________________________________________________________
class Solution
{
    public:
    void suml(Node *root,int sum,int h,int &sum_max,int &h_max)
    {
        if(root==NULL)
        {
        
        if(h_max<h)
        {
            sum_max=sum;
            h_max=h;
        }
        else if(h_max==h&&sum_max<sum)
        {
            sum_max=sum;
        }
        return;
        }
        
        suml(root->left,sum+root->data,h+1,sum_max,h_max);
        
        suml(root->right,sum+root->data,h+1,sum_max,h_max);
       
    }
    
    int sumOfLongRootToLeafPath(Node *root)
    {
        int sum_max=-1;
        int h_max=-1;
        int h=0;
        int sum=0;
        suml(root,sum,h,sum_max,h_max);
        return sum_max;
        
    }
};
