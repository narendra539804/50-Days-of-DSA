2037. Minimum Number of Moves to Seat Everyone
----------------------------------------------------------------------------------------
There are n seats and n students in a room. You are given an array seats of length n, where seats[i] is the position of the ith seat. You are also given the array students of length n, where students[j] is the position of the jth student.

You may perform the following move any number of times:

Increase or decrease the position of the ith student by 1 (i.e., moving the ith student from position x to x + 1 or x - 1)
Return the minimum number of moves required to move each student to a seat such that no two students are in the same seat.

Note that there may be multiple seats or students in the same position at the beginning.

----------------------------------------------------------------------------------------

class Solution {
public:
    int minMovesToSeat(vector<int>& seats, vector<int>& students) 
    {
        int count=0;
        priority_queue<int,vector<int>,greater<int>>p1;
        priority_queue<int,vector<int>,greater<int>>p2;
        for(int i=0;i<seats.size();i++)
        {
            p1.push(seats[i]);
        }
        for(int i=0;i<students.size();i++)
        {
            p2.push(students[i]);
        }
        while(!p1.empty())
        {
            int x=p1.top();
            int y=p2.top();
            p1.pop();
            p2.pop();
            count+=abs(x-y);
        }
        return count;
    }
};