17. Letter Combinations of a Phone Number
-----------------------------------------------------------------------------------------
Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. Return the answer in any order.

A mapping of digit to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.

-----------------------------------------------------------------------------------------

class Solution {
public:
    unordered_map<int,vector<char>> mapper;
    void helper(vector<string> &res,string main,string temp){
        if(main.length() == 0) res.push_back(temp);
        else{
            vector<char> num = mapper[main[0]-'0'];
            main.erase(main.begin());
            for(auto ch : num)
                helper(res,main,temp+ch);
        }
    }
    vector<string> letterCombinations(string digits) {

        vector<string> res;
        if(digits == "") return res;
        mapper[2] = {'a','b','c'};mapper[3] = {'d','e','f'};mapper[4] = {'g','h','i'};
        mapper[5] = {'j','k','l'};mapper[6] = {'m','n','o'};mapper[7] = {'p','q','r','s'};
        mapper[8] = {'t','u','v'};mapper[9] = {'w','x','y','z'};
        helper(res,digits,"");
        return res;
    }
};

