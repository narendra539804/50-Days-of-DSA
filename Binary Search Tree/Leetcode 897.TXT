897. Increasing Order Search Tree
-----------------------------------------------------------------------------------------
Given the root of a binary search tree, rearrange the tree in in-order so that the leftmost node in the tree is now the root of the tree, and every node has no left child and only one right child.
------------------------------------------------------------------------------------------
class Solution {
public:
    vector<int> res;
    void inorder(TreeNode *root)
    {
        if(root!=NULL)
        {
            inorder(root->left);
            res.push_back(root->val);
            inorder(root->right);
        }
    }
    TreeNode* increasingBST(TreeNode* root)
    {
        inorder(root);
        if(root==NULL)
        {
            return root;
        }
        TreeNode *r=new TreeNode(res[0]);
        TreeNode *p=r;
        for(int i=1;i<res.size();i++)
        {
             TreeNode *s=new TreeNode(res[i]);
             p->right=s;
             p=s;
        }
        return r;
    }
};