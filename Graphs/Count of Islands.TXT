class Solution {
public:
    int ans=0;
    int count=2;
    int dx[4]={0,0,1,-1};
    int dy[4]={1,-1,0,0};
    void dfs(int i,int j,vector<vector<int>>& grid,int n,int m)
    {
        grid[i][j]=count;
        for(int k=0;k<4;k++)
        {
            int xx=i+dx[k];
            int yy=j+dy[k];
            if(xx>=0 && xx<n && yy>=0 && yy<m && grid[xx][yy]==0)
            {
                dfs(xx,yy,grid,n,m);
            }
        }
    }
    int closedIsland(vector<vector<int>>& grid)
    {
        int n=grid.size();
        int m=grid[0].size();
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<grid[i].size();j++)
            {
                if(grid[i][j]==0)
                {
                    dfs(i,j,grid,n,m);
                    count++;
                }
            }
        }
        cout<<count<<" ";
        return ans;
    }
};