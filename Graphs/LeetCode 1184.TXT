A bus has n stops numbered from 0 to n - 1 that form a circle. We know the distance between all pairs of neighboring stops where distance[i] is the distance between the stops number i and (i + 1) % n.

The bus goes along both directions i.e. clockwise and counterclockwise.

Return the shortest distance between the given start and destination stops.

======================================================================================

class Solution {
public:
    int distanceBetweenBusStops(vector<int>& distance, int start, int destination) 
    {
        if(destination<start)
        {
            int temp=destination;
            destination=start;
            start=temp;
        }
        int x=distance.size();
        int clock=0;
        for(int i=start;i<destination;i++)
        {
            clock+=distance[i];
        }
        int anticlock=0;
        for(int i=destination;i<x;i++)
        {
            anticlock+=distance[i];
        }
        for(int i=0;i<start;i++)
        {
            anticlock+=distance[i];
        }
        return min(clock,anticlock);
    }
};