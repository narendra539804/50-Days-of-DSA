921. Minimum Add to Make Parentheses Valid
----------------------------------------------------------------------------------------
A parentheses string is valid if and only if:

It is the empty string,
It can be written as AB (A concatenated with B), where A and B are valid strings, or
It can be written as (A), where A is a valid string.
You are given a parentheses string s. In one move, you can insert a parenthesis at any position of the string.

For example, if s = "()))", you can insert an opening parenthesis to be "(()))" or a closing parenthesis to be "())))".
Return the minimum number of moves required to make s valid.
----------------------------------------------------------------------------------------

class Solution {
public:
    int minAddToMakeValid(string s) 
    {
        if(s=="")
        {
            return 0;
        }
        stack<char>p;
        for(int i=0;i<s.size();i++)
        {
            if(p.size()==0)
            {
                p.push(s[i]);
                continue;
            }
            if(s[i]=='(')
            {
                p.push('(');
            }
            if(s[i]==')')
            {
               char q=p.top();
                if(q=='(')
                {
                    p.pop();
                    continue;
                }
                else{
                p.push(')');
                continue;
                }                   
            }
            
        }
        return p.size();
    }
};
 